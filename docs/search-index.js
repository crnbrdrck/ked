crystal_doc_search_index_callback({"repository_name":"github.com/crnbrdrck/ked","body":"# ked\n![Travis Master Status](https://img.shields.io/travis/crnbrdrck/ked/master.svg)\n[![Latest Release](https://img.shields.io/github/tag/crnbrdrck/ked.svg)](https://github.com/crnbrdrck/ked/releases/latest)\n\n\nThe first scripting language of [The People's Republic of Cork](http://en.wikipedia.org/wiki/Cork_\\(city\\)).\n\n# Note\n\n\n## Table Of Contents\n- [ked-lang Documentation](#ked-lang-documentation)\n- [But Why?](#but-why)\n- [Installation](#installation)\n- [Usage](#usage)\n- [Dev Roadmap](#dev-roadmap)\n    - [v0.1](#v0.1)\n    - [v0.2](#v0.2)\n    - [Interpreter Tutorial](#interpreter-tutorial)\n    - [Implemented Features](#implemented-features)\n- [Contributing](#contributing)\n    - [Contributors](#contributors)\n\n## ked-lang Documentation\nThere are 2 sources of documentation available for Ked lang;\n- The original documentation at http://adam-lynch.github.io/ked/ which shows the initial design ideas of the language.\n- Interpreter documentation at https://crnbrdrck.xyz/ked/ which documents the interpreter code I am writing here. This is more used for people who want to help develop the language.\n\n## But Why?\nThis interpreter is being built by me ([crnbrdrck](https://github.com/crnbrdrck)), in the wonderful Crystal Programming Language.\n\nI will be following [Writing an Interpreter in Go](https://interpreterbook.com/) for this new write up of the ked language, but obviously will be translating to Crystal as best I can.\n\nThis should not only help me with my Crystal, but also maybe help me learn Go as a side product?\n\nI'm doing this for a few reasons;\n1. I wanted to learn how interpreters function\n2. I wanted another project to do in Crystal\n3. I've known about Ked for a while and always assumed it was an actual programming language so I wanted to make it real\n4. For the fun of it\n\n## Installation\n\n1. Ensure that *Crystal* is installed on your machine: https://crystal-lang.org/docs/installation/\n2. Clone this repo from the master branch: `git clone git@github.com:crnbrdrck/ked.git`\n3. Build the binary: `make`. The binary will be saved to `./bin/`\n4. (Optionally) Install the binary to your path: `sudo make install`\n\nTo remove, simply do `sudo make clean` which will clean up any directories and files made by the install process\n\n## Usage\n\n```\nUsage:\n  ked [options] feen.ked - Run the script called 'feen.ked'\n\n  Options:\n    -h, --help                       Show this help message\n    -v, --version                    Print version information\n```\n\n- `ked feen.ked` - Run the script named 'feen.ked'\n- `ked -v` - Check the current version of `ked` installed\n\n## Dev Roadmap\nA little way of checking the progress of the development of the `ked` programming language\n\n### v0.1\nAny releases at this version were written following [this tutorial](https://ruslanspivak.com/lsbasi-part1/) and they work somewhat.\n\nThis code is still available under [releases](https://github.com/crnbrdrck/ked/releases), and is viewable on the [lsbasi-archive](https://github.com/crnbrdrck/ked/tree/lsbasi-archive) branch.\n\n### v0.2\nThese are the versions that are being built following the *Interpreter in Go* book.\n\nHopefully it will be better and more fully featured, but I will still be having to translate both Go into Crystal and Monkey (the language developed in the book) into Ked.\n\n#### Book Chapters\nBelow is a list of the chapters in the [book](https://interpreterbook.com/) that I am following.\n\nThis list can be used to see at a glance the dev status of the project\n\n- [x] Chapter 1: Lexing\n- [ ] Chapter 2: Parsing\n- [ ] Chapter 3: Evaluation\n- [ ] Chapter 4: Extending The Interpreter\n- [ ] The Lost Chapter\n\n#### Implemented Features\nThis is an ever growing list of the current features supported in the `ked` language.\nIf this list grows too big I'll probably group things together to give it a semblance of structure\n\n***NOTE**: Anything in the list below marked with an asterisk was something not in the original design doc and is open to debate*\n\n- Nothing right now because I'm starting from scratch\n\nFor more info, see the [CHANGELOG](CHANGELOG.md) to see what changed and when\n\n### And Beyond?\nProbably nothing. This repo has been me experimenting with learning how languages work in an attempt to start making my own.\n\nOnce I finish the book, I'll start planning out [sapphire](https://github.com/crnbrdrck/sapphire) in greater detail and start hashing it out into what I want it to be.\n\n## Contributing\n\n1. Fork it ( https://github.com/[your-github-name]/ked/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n**Please make all Pull Requests to the `develop` branch and not the master branch**\n\n## Contributors\n\nPull-requests encouraged, but contributions are accepted in any form, including [issues](https://github.com/crnbrdrck/ked/issues).\n\n### Contributors\n- [adam-lynch](https://github.com/adam-lynch/) - original designer of the Ked language\n- [crnbrdrck](https://github.com/crnbrdrck) Ciaran Broderick - developed interpreter in crystal\n","program":{"html_id":"github.com/crnbrdrck/ked/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/crnbrdrck/ked","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/crnbrdrck/ked/Ked","path":"Ked.html","kind":"module","full_name":"Ked","name":"Ked","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ked/lexer.cr","line_number":3,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr"},{"filename":"ked/ast/node.cr","line_number":1,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/node.cr"},{"filename":"ked/ast/expression.cr","line_number":3,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/expression.cr"},{"filename":"ked/ast/identifier.cr","line_number":3,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/identifier.cr"},{"filename":"ked/ast/program.cr","line_number":3,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/program.cr"},{"filename":"ked/ast/statement.cr","line_number":3,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/statement.cr"},{"filename":"ked/ast/remember_statement.cr","line_number":4,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/remember_statement.cr"},{"filename":"ked/ast/return_statement.cr","line_number":4,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/return_statement.cr"},{"filename":"ked/parser.cr","line_number":3,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr"},{"filename":"ked/repl.cr","line_number":1,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/repl.cr"},{"filename":"ked/token.cr","line_number":1,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr"},{"filename":"ked/version.cr","line_number":1,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/version.cr"},{"filename":"ked.cr","line_number":8,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked.cr"}],"repository_name":"github.com/crnbrdrck/ked","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"KEYWORDS","value":"{\"plus\" => TokenType::ADDITION, \"awayFrom\" => TokenType::SUBTRACTION, \"times\" => TokenType::MULTIPLICATION, \"into\" => TokenType::DIVISION, \"is\" => TokenType::EQUALITY, \"not\" => TokenType::NEGATION, \"isNot\" => TokenType::INEQUALITY, \"isSmallerThan\" => TokenType::LT, \"isBiggerThan\" => TokenType::GT, \"like\" => TokenType::LIKE, \"bai\" => TokenType::FUNCTION, \"remember\" => TokenType::REMEMBER, \"hereYaGoBai\" => TokenType::RETURN, \"gospel\" => TokenType::TRUE, \"bull\" => TokenType::FALSE, \"eh\" => TokenType::IF, \"orEvenJust\" => TokenType::ELSE}","doc":"Hash that maps the various Ked keywords to the TokenType that represents them.\n\nThis is used in `Ked::Lexer#read_identifier` to determine whether the read string of characters represents a keyword or an identifier.","summary":"<p>Hash that maps the various Ked keywords to the TokenType that represents them.</p>"},{"name":"NULL_CHAR","value":"'\\u{0}'","doc":"Null character.\n\nUsed to mark the end of the input.","summary":"<p>Null character.</p>"},{"name":"VERSION","value":"\"0.2.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Ked is the first scripting language to come out of [The People's Republic of Cork](http://en.wikipedia.org/wiki/Cork_\\(city\\).\n\nThe docs that follow are indepth documentation for the interpreter for Ked.\nNOTE: These docs should not be used to learn the language, they are for people who wish to contribute to the language.","summary":"<p>Ked is the first scripting language to come out of <a href=\"http://en.wikipedia.org/wiki/Cork_\\(city\\\" target=\"_blank\">The People's Republic of Cork</a>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/crnbrdrck/ked/Ked/AST","path":"Ked/AST.html","kind":"module","full_name":"Ked::AST","name":"AST","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ked/ast/node.cr","line_number":3,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/node.cr"},{"filename":"ked/ast/expression.cr","line_number":4,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/expression.cr"},{"filename":"ked/ast/identifier.cr","line_number":4,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/identifier.cr"},{"filename":"ked/ast/program.cr","line_number":4,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/program.cr"},{"filename":"ked/ast/statement.cr","line_number":4,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/statement.cr"},{"filename":"ked/ast/remember_statement.cr","line_number":5,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/remember_statement.cr"},{"filename":"ked/ast/return_statement.cr","line_number":5,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/return_statement.cr"}],"repository_name":"github.com/crnbrdrck/ked","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crnbrdrck/ked/Ked","kind":"module","full_name":"Ked","name":"Ked"},"doc":"The AST module contains classes that define the different types of nodes that will be used as part of the Abstract Syntax Tree (AST) for the Ked language.","summary":"<p>The AST module contains classes that define the different types of nodes that will be used as part of the Abstract Syntax Tree (AST) for the Ked language.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Expression","path":"Ked/AST/Expression.html","kind":"class","full_name":"Ked::AST::Expression","name":"Expression","abstract":false,"superclass":{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Node","kind":"class","full_name":"Ked::AST::Node","name":"Node"},"ancestors":[{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Node","kind":"class","full_name":"Ked::AST::Node","name":"Node"},{"html_id":"github.com/crnbrdrck/ked/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crnbrdrck/ked/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ked/ast/expression.cr","line_number":10,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/expression.cr"}],"repository_name":"github.com/crnbrdrck/ked","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Identifier","kind":"class","full_name":"Ked::AST::Identifier","name":"Identifier"}],"including_types":[],"namespace":{"html_id":"github.com/crnbrdrck/ked/Ked/AST","kind":"module","full_name":"Ked::AST","name":"AST"},"doc":"Class for handling `expression` nodes.\n\nAn expression is anything that returns a value.\n\nSee the list of subclasses to see what `expressions` are currently available in Ked.","summary":"<p>Class for handling <code>expression</code> nodes.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Identifier","path":"Ked/AST/Identifier.html","kind":"class","full_name":"Ked::AST::Identifier","name":"Identifier","abstract":false,"superclass":{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Expression","kind":"class","full_name":"Ked::AST::Expression","name":"Expression"},"ancestors":[{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Expression","kind":"class","full_name":"Ked::AST::Expression","name":"Expression"},{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Node","kind":"class","full_name":"Ked::AST::Node","name":"Node"},{"html_id":"github.com/crnbrdrck/ked/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crnbrdrck/ked/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ked/ast/identifier.cr","line_number":8,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/identifier.cr"}],"repository_name":"github.com/crnbrdrck/ked","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crnbrdrck/ked/Ked/AST","kind":"module","full_name":"Ked::AST","name":"AST"},"doc":"Class for handling `identifier` nodes.\n\nThese can be variable names, function names, class names, etc.","summary":"<p>Class for handling <code>identifier</code> nodes.</p>","class_methods":[],"constructors":[{"id":"new(token:Token,value:String)-class-method","html_id":"new(token:Token,value:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"Token"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(token : Token, value : String)","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/identifier.cr#L14","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/identifier.cr#L14","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"Token"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"token:Ked::Token-instance-method","html_id":"token:Ked::Token-instance-method","name":"token","doc":"The `Ked::Token` instance used to create this node.","summary":"<p>The <code><a href=\"../../Ked/Token.html\">Ked::Token</a></code> instance used to create this node.</p>","abstract":false,"args":[],"args_string":" : Ked::Token","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/identifier.cr#L23","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/identifier.cr#L23","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"Return this node's token's literal as the node's literal.","summary":"<p>Return this node's token's literal as the node's literal.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/identifier.cr#L18","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/identifier.cr#L18","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@token.literal"}},{"id":"value:String-instance-method","html_id":"value:String-instance-method","name":"value","doc":"The name of the identifier (\"x\", \"add\", etc).","summary":"<p>The name of the identifier (\"x\", \"add\", etc).</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/identifier.cr#L25","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/identifier.cr#L25","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Node","path":"Ked/AST/Node.html","kind":"class","full_name":"Ked::AST::Node","name":"Node","abstract":false,"superclass":{"html_id":"github.com/crnbrdrck/ked/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/crnbrdrck/ked/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crnbrdrck/ked/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ked/ast/node.cr","line_number":5,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/node.cr"}],"repository_name":"github.com/crnbrdrck/ked","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Expression","kind":"class","full_name":"Ked::AST::Expression","name":"Expression"},{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Program","kind":"class","full_name":"Ked::AST::Program","name":"Program"},{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Statement","kind":"class","full_name":"Ked::AST::Statement","name":"Statement"}],"including_types":[],"namespace":{"html_id":"github.com/crnbrdrck/ked/Ked/AST","kind":"module","full_name":"Ked::AST","name":"AST"},"doc":"Base AST Node Class that all other Nodes inherit from.","summary":"<p>Base AST Node Class that all other Nodes inherit from.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The token literal is just a string that tells us the class of this node.\n\nIt is used for debugging purposes","summary":"<p>The token literal is just a string that tells us the class of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/node.cr#L14","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/node.cr#L14","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token_literal"}}],"macros":[],"types":[]},{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Program","path":"Ked/AST/Program.html","kind":"class","full_name":"Ked::AST::Program","name":"Program","abstract":false,"superclass":{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Node","kind":"class","full_name":"Ked::AST::Node","name":"Node"},"ancestors":[{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Node","kind":"class","full_name":"Ked::AST::Node","name":"Node"},{"html_id":"github.com/crnbrdrck/ked/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crnbrdrck/ked/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ked/ast/program.cr","line_number":10,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/program.cr"}],"repository_name":"github.com/crnbrdrck/ked","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crnbrdrck/ked/Ked/AST","kind":"module","full_name":"Ked::AST","name":"AST"},"doc":"Class for handling `program` nodes.\n\nA `program` node is the root node of our AST.\n\nIn Ked, a `program` simply contains an array of `Ked::AST::Statement` nodes.","summary":"<p>Class for handling <code>program</code> nodes.</p>","class_methods":[],"constructors":[{"id":"new(statements:Array(Statement))-class-method","html_id":"new(statements:Array(Statement))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"statements","doc":null,"default_value":"","external_name":"statements","restriction":"Array(Statement)"}],"args_string":"(statements : Array(Statement))","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/program.cr#L14","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/program.cr#L14","def":{"name":"new","args":[{"name":"statements","doc":null,"default_value":"","external_name":"statements","restriction":"Array(Statement)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(statements)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"statements:Array(Ked::AST::Statement)-instance-method","html_id":"statements:Array(Ked::AST::Statement)-instance-method","name":"statements","doc":"The array of statements in this `program`.","summary":"<p>The array of statements in this <code>program</code>.</p>","abstract":false,"args":[],"args_string":" : Array(Ked::AST::Statement)","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/program.cr#L27","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/program.cr#L27","def":{"name":"statements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@statements"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"Generates the token_literal for the `program` node by returning the token_literal for the first statement in the program.","summary":"<p>Generates the token_literal for the <code>program</code> node by returning the token_literal for the first statement in the program.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/program.cr#L18","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/program.cr#L18","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if @statements.size > 0\n  @statements[0].token_literal\nelse\n  \"\"\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/crnbrdrck/ked/Ked/AST/RememberStatement","path":"Ked/AST/RememberStatement.html","kind":"class","full_name":"Ked::AST::RememberStatement","name":"RememberStatement","abstract":false,"superclass":{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Statement","kind":"class","full_name":"Ked::AST::Statement","name":"Statement"},"ancestors":[{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Statement","kind":"class","full_name":"Ked::AST::Statement","name":"Statement"},{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Node","kind":"class","full_name":"Ked::AST::Node","name":"Node"},{"html_id":"github.com/crnbrdrck/ked/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crnbrdrck/ked/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ked/ast/remember_statement.cr","line_number":7,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/remember_statement.cr"}],"repository_name":"github.com/crnbrdrck/ked","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crnbrdrck/ked/Ked/AST","kind":"module","full_name":"Ked::AST","name":"AST"},"doc":"Class for handling `remember` statements used for assigning variables","summary":"<p>Class for handling <code>remember</code> statements used for assigning variables</p>","class_methods":[],"constructors":[{"id":"new(token:Token,name:Identifier,value:Expression)-class-method","html_id":"new(token:Token,name:Identifier,value:Expression)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"Token"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Identifier"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Expression"}],"args_string":"(token : Token, name : Identifier, value : Expression)","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/remember_statement.cr#L15","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/remember_statement.cr#L15","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"Token"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Identifier"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Expression"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, name, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"name:Ked::AST::Identifier-instance-method","html_id":"name:Ked::AST::Identifier-instance-method","name":"name","doc":"A `Ked::AST::Identifier` node that represents the name of the variable being assigned to.","summary":"<p>A <code><a href=\"../../Ked/AST/Identifier.html\">Ked::AST::Identifier</a></code> node that represents the name of the variable being assigned to.</p>","abstract":false,"args":[],"args_string":" : Ked::AST::Identifier","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/remember_statement.cr#L24","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/remember_statement.cr#L24","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"Generates the token_literal for this node by returning the literal for the token used to create it.","summary":"<p>Generates the token_literal for this node by returning the literal for the token used to create it.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/remember_statement.cr#L19","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/remember_statement.cr#L19","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@token.literal"}},{"id":"value:Ked::AST::Expression-instance-method","html_id":"value:Ked::AST::Expression-instance-method","name":"value","doc":"The right hand side of the assignment statement, returns the value to be assigned to the variable.","summary":"<p>The right hand side of the assignment statement, returns the value to be assigned to the variable.</p>","abstract":false,"args":[],"args_string":" : Ked::AST::Expression","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/remember_statement.cr#L26","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/remember_statement.cr#L26","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"github.com/crnbrdrck/ked/Ked/AST/ReturnStatement","path":"Ked/AST/ReturnStatement.html","kind":"class","full_name":"Ked::AST::ReturnStatement","name":"ReturnStatement","abstract":false,"superclass":{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Statement","kind":"class","full_name":"Ked::AST::Statement","name":"Statement"},"ancestors":[{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Statement","kind":"class","full_name":"Ked::AST::Statement","name":"Statement"},{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Node","kind":"class","full_name":"Ked::AST::Node","name":"Node"},{"html_id":"github.com/crnbrdrck/ked/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crnbrdrck/ked/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ked/ast/return_statement.cr","line_number":7,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/return_statement.cr"}],"repository_name":"github.com/crnbrdrck/ked","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crnbrdrck/ked/Ked/AST","kind":"module","full_name":"Ked::AST","name":"AST"},"doc":"Class for handling `hereYaGoBai` statements that are used to return values from functions","summary":"<p>Class for handling <code>hereYaGoBai</code> statements that are used to return values from functions</p>","class_methods":[],"constructors":[{"id":"new(token:Token,value:Expression)-class-method","html_id":"new(token:Token,value:Expression)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"Token"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Expression"}],"args_string":"(token : Token, value : Expression)","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/return_statement.cr#L13","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/return_statement.cr#L13","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"Token"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Expression"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"token:Ked::Token-instance-method","html_id":"token:Ked::Token-instance-method","name":"token","doc":"The `Ked::Token` instance used to generate this statement node","summary":"<p>The <code><a href=\"../../Ked/Token.html\">Ked::Token</a></code> instance used to generate this statement node</p>","abstract":false,"args":[],"args_string":" : Ked::Token","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/return_statement.cr#L22","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/return_statement.cr#L22","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"Generate the literal for this node by returning the literal of its token","summary":"<p>Generate the literal for this node by returning the literal of its token</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/return_statement.cr#L17","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/return_statement.cr#L17","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@token.literal"}},{"id":"value:Ked::AST::Expression-instance-method","html_id":"value:Ked::AST::Expression-instance-method","name":"value","doc":"The expression to be returned","summary":"<p>The expression to be returned</p>","abstract":false,"args":[],"args_string":" : Ked::AST::Expression","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/return_statement.cr#L24","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/return_statement.cr#L24","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Statement","path":"Ked/AST/Statement.html","kind":"class","full_name":"Ked::AST::Statement","name":"Statement","abstract":false,"superclass":{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Node","kind":"class","full_name":"Ked::AST::Node","name":"Node"},"ancestors":[{"html_id":"github.com/crnbrdrck/ked/Ked/AST/Node","kind":"class","full_name":"Ked::AST::Node","name":"Node"},{"html_id":"github.com/crnbrdrck/ked/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crnbrdrck/ked/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ked/ast/statement.cr","line_number":10,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/ast/statement.cr"}],"repository_name":"github.com/crnbrdrck/ked","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/crnbrdrck/ked/Ked/AST/RememberStatement","kind":"class","full_name":"Ked::AST::RememberStatement","name":"RememberStatement"},{"html_id":"github.com/crnbrdrck/ked/Ked/AST/ReturnStatement","kind":"class","full_name":"Ked::AST::ReturnStatement","name":"ReturnStatement"}],"including_types":[],"namespace":{"html_id":"github.com/crnbrdrck/ked/Ked/AST","kind":"module","full_name":"Ked::AST","name":"AST"},"doc":"Class for handling `statement` nodes.\n\nA statement is anything that does not return a value.\n\nSee the list of subclasses to see what `statements` are currently available in Ked.","summary":"<p>Class for handling <code>statement</code> nodes.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/crnbrdrck/ked/Ked/Lexer","path":"Ked/Lexer.html","kind":"class","full_name":"Ked::Lexer","name":"Lexer","abstract":false,"superclass":{"html_id":"github.com/crnbrdrck/ked/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/crnbrdrck/ked/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crnbrdrck/ked/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ked/lexer.cr","line_number":12,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr"}],"repository_name":"github.com/crnbrdrck/ked","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crnbrdrck/ked/Ked","kind":"module","full_name":"Ked","name":"Ked"},"doc":"The Lexer reads in Ked code as its source and generates tokens based on it.\n\nThe Lexer works as a generator by calling the `#get_next_token` method.","summary":"<p>The Lexer reads in Ked code as its source and generates tokens based on it.</p>","class_methods":[],"constructors":[{"id":"new(input:File)-class-method","html_id":"new(input:File)-class-method","name":"new","doc":"Create the Lexer by passing in a File descriptor.\n\nThe File descriptor will be used to generate an array of Strings representing each line of the file, as well as provide a file name to pass to all Token instances.","summary":"<p>Create the Lexer by passing in a File descriptor.</p>","abstract":false,"args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"File"}],"args_string":"(input : File)","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr#L24","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr#L24","def":{"name":"new","args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"File"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(input)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(input:String)-class-method","html_id":"new(input:String)-class-method","name":"new","doc":"Create the Lexer using a String that contains Ked source code.\n\nThe String will be converted into an array of lines, as if it were a File.\n\nThe filename will be set to \"<stdin>\" as it is currently assumed that this is the only place that this constructor will be called from.","summary":"<p>Create the Lexer using a String that contains Ked source code.</p>","abstract":false,"args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"String"}],"args_string":"(input : String)","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr#L40","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr#L40","def":{"name":"new","args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(input)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"get_next_token:Ked::Token-instance-method","html_id":"get_next_token:Ked::Token-instance-method","name":"get_next_token","doc":"Generate the next token from the input.\n\nFirst check to see if the current character is a single character token.\nIf not, check if it is a letter or number and try to generate a keyword / identifier or number token respectively.","summary":"<p>Generate the next token from the input.</p>","abstract":false,"args":[],"args_string":" : Ked::Token","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr#L94","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr#L94","def":{"name":"get_next_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ked::Token","visibility":"Public","body":"self.skip_whitespace_chars\nstart_char, start_line = @char_num + 1, @line_num\ntoken : Ked::Token\ncase @current_char\nwhen '='\n  token = Token.new(TokenType::ASSIGN, \"=\", @filename, start_line, start_char)\nwhen '('\n  token = Token.new(TokenType::LPAREN, \"(\", @filename, start_line, start_char)\nwhen ')'\n  token = Token.new(TokenType::RPAREN, \")\", @filename, start_line, start_char)\nwhen '{'\n  token = Token.new(TokenType::LBRACE, \"{\", @filename, start_line, start_char)\nwhen '}'\n  token = Token.new(TokenType::RBRACE, \"}\", @filename, start_line, start_char)\nwhen ','\n  token = Token.new(TokenType::COMMA, \",\", @filename, start_line, start_char)\nwhen '€'\n  token = Token.new(TokenType::VAR_PREFIX, \"€\", @filename, start_line, start_char)\nwhen '!'\n  token = Token.new(TokenType::NEGATION, \"!\", @filename, start_line, start_char)\nwhen Ked::NULL_CHAR\n  token = Token.new(TokenType::EOF, \"\", @filename, start_line, start_char)\nelse\n  if self.is_valid_identifier_char?(@current_char)\n    value = self.read_identifier\n    token_type = Ked::KEYWORDS.fetch(value, TokenType::IDENT)\n    return Token.new(token_type, value, @filename, start_line, start_char)\n  else\n    if @current_char.to_i?\n      return Token.new(TokenType::NUMBER, self.read_number, @filename, start_line, start_char)\n    else\n      token = Token.new(TokenType::ILLEGAL, @current_char.to_s, @filename, start_line, start_char)\n    end\n  end\nend\nself.read_next_char\ntoken\n"}},{"id":"is_valid_identifier_char?(char:Char)-instance-method","html_id":"is_valid_identifier_char?(char:Char)-instance-method","name":"is_valid_identifier_char?","doc":"Helper that determines if a character can be used as part of an identifier / keyword.\n\nCurrently allowed characters are; letters, '_' characters.","summary":"<p>Helper that determines if a character can be used as part of an identifier / keyword.</p>","abstract":false,"args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"}],"args_string":"(char : Char)","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr#L177","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr#L177","def":{"name":"is_valid_identifier_char?","args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"char.letter? || (char == '_')"}},{"id":"read_identifier-instance-method","html_id":"read_identifier-instance-method","name":"read_identifier","doc":"Read a word in from the source.\n\nThe word returned from this method will be checked against `Ked::KEYWORDS` to see if it is a keyword or not.\n\nIf so, the representative TokenType for that keyword will be used to create the token.\nIf not, a `Ked::TokenType::IDENT` token will be generated with the read word as its value.","summary":"<p>Read a word in from the source.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr#L145","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr#L145","def":{"name":"read_identifier","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"char_num = @char_num\ncurrent_line = @current_line\nend_char = @char_num\nwhile (current_line == @current_line) && (self.is_valid_identifier_char?(@current_char))\n  self.read_next_char\n  end_char = end_char + 1\nend\ncurrent_line[char_num...end_char]\n"}},{"id":"read_next_char-instance-method","html_id":"read_next_char-instance-method","name":"read_next_char","doc":"Read the next character in the current line of the input.\n\nIf the end of the current line has been reached, move to the next line.\n\nIf the end of the input has been reached, set the current_char to be `Ked::NULL_CHARACTER`.","summary":"<p>Read the next character in the current line of the input.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr#L57","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr#L57","def":{"name":"read_next_char","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @read_char_num >= @current_line.size\n  @line_num = @line_num + 1\n  @char_num = 0\n  @read_char_num = 0\n  if @line_num > @input.size\n    @current_line = Ked::NULL_CHAR.to_s\n    @current_char = Ked::NULL_CHAR\n  else\n    @current_line = @input[@line_num - 1]\n    @current_char = '\\n'\n  end\nelse\n  @current_char = @current_line[@read_char_num]\n  @char_num = @read_char_num\n  @read_char_num = @read_char_num + 1\nend"}},{"id":"read_number-instance-method","html_id":"read_number-instance-method","name":"read_number","doc":"Read a multi-digit number from the source.\n\nTODO - Add float handling","summary":"<p>Read a multi-digit number from the source.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr#L161","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr#L161","def":{"name":"read_number","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"char_num = @char_num\ncurrent_line = @current_line\nend_char = @char_num\nwhile (current_line == @current_line) && @current_char.to_i?\n  self.read_next_char\n  end_char = end_char + 1\nend\ncurrent_line[char_num...end_char]\n"}},{"id":"skip_whitespace_chars-instance-method","html_id":"skip_whitespace_chars-instance-method","name":"skip_whitespace_chars","doc":"Skip all whitespace characters or empty lines that are found in the input.\n\nKed uses braces for blocks so whitespace doesn't have much special meaning, so we can just skip them entirely.","summary":"<p>Skip all whitespace characters or empty lines that are found in the input.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr#L84","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/lexer.cr#L84","def":{"name":"skip_whitespace_chars","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"while ((((@current_char == ' ') || (@current_char == '\\t')) || (@current_line == \"\")) || (@current_char == '\\n')) || (@current_char == '\\r')\n  self.read_next_char\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/crnbrdrck/ked/Ked/Parser","path":"Ked/Parser.html","kind":"class","full_name":"Ked::Parser","name":"Parser","abstract":false,"superclass":{"html_id":"github.com/crnbrdrck/ked/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/crnbrdrck/ked/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crnbrdrck/ked/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ked/parser.cr","line_number":7,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr"}],"repository_name":"github.com/crnbrdrck/ked","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crnbrdrck/ked/Ked","kind":"module","full_name":"Ked","name":"Ked"},"doc":"The Parser generates an Abstract Syntax Tree (AST) by reading in the `Ked::Token` instances generated by an instance of `Ked::Lexer`.\n\nThis AST will be generated based on the grammatical rules for the Ked syntax.","summary":"<p>The Parser generates an Abstract Syntax Tree (AST) by reading in the <code><a href=\"../Ked/Token.html\">Ked::Token</a></code> instances generated by an instance of <code><a href=\"../Ked/Lexer.html\">Ked::Lexer</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(lexer:Lexer)-class-method","html_id":"new(lexer:Lexer)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"lexer","doc":null,"default_value":"","external_name":"lexer","restriction":"Lexer"}],"args_string":"(lexer : Lexer)","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr#L16","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr#L16","def":{"name":"new","args":[{"name":"lexer","doc":null,"default_value":"","external_name":"lexer","restriction":"Lexer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(lexer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"eat(token_type:TokenType):Bool-instance-method","html_id":"eat(token_type:TokenType):Bool-instance-method","name":"eat","doc":"Check that the peek token is the same as type as the type passed in, and advance the current and peek token pointers if so.","summary":"<p>Check that the peek token is the same as type as the type passed in, and advance the current and peek token pointers if so.</p>","abstract":false,"args":[{"name":"token_type","doc":null,"default_value":"","external_name":"token_type","restriction":"TokenType"}],"args_string":"(token_type : TokenType) : Bool","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr#L106","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr#L106","def":{"name":"eat","args":[{"name":"token_type","doc":null,"default_value":"","external_name":"token_type","restriction":"TokenType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if @peek_token.token_type == token_type\n  self.get_next_token\n  true\nelse\n  @errors << \"ParserError in #{@peek_token.file_name} at line #{@peek_token.line_num} char #{@peek_token.char_num}: Expected #{token_type.to_s}, received #{@peek_token.token_type.to_s}\"\n  false\nend"}},{"id":"errors:Array(String)-instance-method","html_id":"errors:Array(String)-instance-method","name":"errors","doc":"Maintain an array of errors that are generated during the parsing","summary":"<p>Maintain an array of errors that are generated during the parsing</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr#L14","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr#L14","def":{"name":"errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@errors"}},{"id":"get_next_token-instance-method","html_id":"get_next_token-instance-method","name":"get_next_token","doc":"Read the next token from the Lexer and update both the current and peek tokens accordingly.","summary":"<p>Read the next token from the Lexer and update both the current and peek tokens accordingly.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr#L24","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr#L24","def":{"name":"get_next_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@current_token = @peek_token\n@peek_token = @lexer.get_next_token\n"}},{"id":"parse_program:AST::Program-instance-method","html_id":"parse_program:AST::Program-instance-method","name":"parse_program","doc":"Create a `Ked::AST::Program` node and generate its list of `Ked::AST::Statement` nodes by reading through the generated output from the lexer.","summary":"<p>Create a <code><a href=\"../Ked/AST/Program.html\">Ked::AST::Program</a></code> node and generate its list of <code><a href=\"../Ked/AST/Statement.html\">Ked::AST::Statement</a></code> nodes by reading through the generated output from the lexer.</p>","abstract":false,"args":[],"args_string":" : AST::Program","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr#L30","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr#L30","def":{"name":"parse_program","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::Program","visibility":"Public","body":"statement_list = [] of AST::Statement\nwhile !@current_token.token_type.eof?\n  statement_node = self.parse_statement\n  if !statement_node.nil?\n    statement_list << statement_node\n  end\n  self.get_next_token\nend\nAST::Program.new(statement_list)\n"}},{"id":"parse_remember_statement:AST::RememberStatement?-instance-method","html_id":"parse_remember_statement:AST::RememberStatement?-instance-method","name":"parse_remember_statement","doc":"Parse a `remember statement` and create an `Ked::AST::RememberStatement` node for it.\n\nReturns `nil` if the attempted `remember statement` turns out to be invalid.\nThis will also cause an error to be added to the `errors` array","summary":"<p>Parse a <code>remember statement</code> and create an <code><a href=\"../Ked/AST/RememberStatement.html\">Ked::AST::RememberStatement</a></code> node for it.</p>","abstract":false,"args":[],"args_string":" : AST::RememberStatement?","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr#L63","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr#L63","def":{"name":"parse_remember_statement","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::RememberStatement | ::Nil","visibility":"Public","body":"remember_token = @current_token\nif !(self.eat(TokenType::VAR_PREFIX))\n  return nil\nend\nif !(self.eat(TokenType::IDENT))\n  return nil\nend\nident = AST::Identifier.new(@current_token, @current_token.literal)\nif !(self.eat(TokenType::ASSIGN))\n  return nil\nend\nwhile !@current_token.token_type.like?\n  self.get_next_token\nend\nAST::RememberStatement.new(remember_token, ident, AST::Expression.new)\n"}},{"id":"parse_return_statement:AST::ReturnStatement?-instance-method","html_id":"parse_return_statement:AST::ReturnStatement?-instance-method","name":"parse_return_statement","doc":"Parse a `return statement` and create an `Ked::AST::ReturnStatement` node for it.\n\nReturns `nil` if the attempted `return statement` turns out to be invalid.\nThis will also cause an error to be added to the `errors` array","summary":"<p>Parse a <code>return statement</code> and create an <code><a href=\"../Ked/AST/ReturnStatement.html\">Ked::AST::ReturnStatement</a></code> node for it.</p>","abstract":false,"args":[],"args_string":" : AST::ReturnStatement?","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr#L93","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr#L93","def":{"name":"parse_return_statement","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::ReturnStatement | ::Nil","visibility":"Public","body":"return_token = @current_token\nwhile !@current_token.token_type.like?\n  self.get_next_token\nend\nAST::ReturnStatement.new(return_token, AST::Expression.new)\n"}},{"id":"parse_statement:AST::Statement?-instance-method","html_id":"parse_statement:AST::Statement?-instance-method","name":"parse_statement","doc":"Parse a `statement` and create the corresponding node for it.\n\nReturns `nil` if the attempted `statement` turns out to be invalid.","summary":"<p>Parse a <code>statement</code> and create the corresponding node for it.</p>","abstract":false,"args":[],"args_string":" : AST::Statement?","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr#L45","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/parser.cr#L45","def":{"name":"parse_statement","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::Statement | ::Nil","visibility":"Public","body":"case @current_token.token_type\nwhen TokenType::REMEMBER\n  self.parse_remember_statement\nwhen TokenType::RETURN\n  self.parse_return_statement\nelse\n  nil\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/crnbrdrck/ked/Ked/REPL","path":"Ked/REPL.html","kind":"class","full_name":"Ked::REPL","name":"REPL","abstract":false,"superclass":{"html_id":"github.com/crnbrdrck/ked/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/crnbrdrck/ked/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crnbrdrck/ked/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ked/repl.cr","line_number":5,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/repl.cr"}],"repository_name":"github.com/crnbrdrck/ked","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crnbrdrck/ked/Ked","kind":"module","full_name":"Ked","name":"Ked"},"doc":"Class for handling the Read-Eval-Print-Loop (REPL) environment for Ked.\n\nCurrently just reads in a string typed by the user and prints out the list of generated tokens from that input.","summary":"<p>Class for handling the Read-Eval-Print-Loop (REPL) environment for Ked.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Start the REPL environment.\n\nEnds on empty input.","summary":"<p>Start the REPL environment.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/repl.cr#L11","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/repl.cr#L11","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/crnbrdrck/ked/Ked/Token","path":"Ked/Token.html","kind":"class","full_name":"Ked::Token","name":"Token","abstract":false,"superclass":{"html_id":"github.com/crnbrdrck/ked/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/crnbrdrck/ked/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crnbrdrck/ked/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ked/token.cr","line_number":103,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr"}],"repository_name":"github.com/crnbrdrck/ked","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crnbrdrck/ked/Ked","kind":"module","full_name":"Ked","name":"Ked"},"doc":"Class for managing Token instances generated by the Lexer.","summary":"<p>Class for managing Token instances generated by the Lexer.</p>","class_methods":[],"constructors":[{"id":"new(token_type:TokenType,literal:String,file_name:String,line_num:Int32,char_num:Int32)-class-method","html_id":"new(token_type:TokenType,literal:String,file_name:String,line_num:Int32,char_num:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token_type","doc":null,"default_value":"","external_name":"token_type","restriction":"TokenType"},{"name":"literal","doc":null,"default_value":"","external_name":"literal","restriction":"String"},{"name":"file_name","doc":null,"default_value":"","external_name":"file_name","restriction":"String"},{"name":"line_num","doc":null,"default_value":"","external_name":"line_num","restriction":"Int32"},{"name":"char_num","doc":null,"default_value":"","external_name":"char_num","restriction":"Int32"}],"args_string":"(token_type : TokenType, literal : String, file_name : String, line_num : Int32, char_num : Int32)","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L109","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L109","def":{"name":"new","args":[{"name":"token_type","doc":null,"default_value":"","external_name":"token_type","restriction":"TokenType"},{"name":"literal","doc":null,"default_value":"","external_name":"literal","restriction":"String"},{"name":"file_name","doc":null,"default_value":"","external_name":"file_name","restriction":"String"},{"name":"line_num","doc":null,"default_value":"","external_name":"line_num","restriction":"Int32"},{"name":"char_num","doc":null,"default_value":"","external_name":"char_num","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token_type, literal, file_name, line_num, char_num)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"char_num:Int32-instance-method","html_id":"char_num:Int32-instance-method","name":"char_num","doc":"Keeps track of the position in the line of the first character that caused the generation of this token.","summary":"<p>Keeps track of the position in the line of the first character that caused the generation of this token.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L131","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L131","def":{"name":"char_num","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@char_num"}},{"id":"file_name:String-instance-method","html_id":"file_name:String-instance-method","name":"file_name","doc":"Keeps track of the name of the file that this token was generated from.","summary":"<p>Keeps track of the name of the file that this token was generated from.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L127","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L127","def":{"name":"file_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@file_name"}},{"id":"line_num:Int32-instance-method","html_id":"line_num:Int32-instance-method","name":"line_num","doc":"Keeps track of the line of the file from which the token was genereated from.","summary":"<p>Keeps track of the line of the file from which the token was genereated from.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L129","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L129","def":{"name":"line_num","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@line_num"}},{"id":"literal:String-instance-method","html_id":"literal:String-instance-method","name":"literal","doc":"The value of the token.\n\nWhat this is depends on the type of the token:\n- For keywords, this will be the string from `Ked::KEYWORDS` that maps to its type.\n- For numbers, this will be the read number in string form.\n- For identifiers, this will be the name of the variable / function.","summary":"<p>The value of the token.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L125","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L125","def":{"name":"literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@literal"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"Generate a string representation of the Token instance.","summary":"<p>Generate a string representation of the Token instance.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L113","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L113","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Token(#{@token_type}, #{literal}) (#{@file_name}:#{@line_num}:#{@char_num})\""}},{"id":"token_type:Ked::TokenType-instance-method","html_id":"token_type:Ked::TokenType-instance-method","name":"token_type","doc":"The type of this token.","summary":"<p>The type of this token.</p>","abstract":false,"args":[],"args_string":" : Ked::TokenType","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L118","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L118","def":{"name":"token_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token_type"}}],"macros":[],"types":[]},{"html_id":"github.com/crnbrdrck/ked/Ked/TokenType","path":"Ked/TokenType.html","kind":"enum","full_name":"Ked::TokenType","name":"TokenType","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/crnbrdrck/ked/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/crnbrdrck/ked/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crnbrdrck/ked/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crnbrdrck/ked/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ked/token.cr","line_number":5,"url":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr"}],"repository_name":"github.com/crnbrdrck/ked","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"name":"ILLEGAL","value":"0","doc":"Unknown token, this usually means an error","summary":"<p>Unknown token, this usually means an error</p>"},{"name":"EOF","value":"1","doc":"End Of File","summary":"<p>End Of File</p>"},{"name":"IDENT","value":"2","doc":"Name of variables/ functions, i.e: add, foobar, x, y, etc","summary":"<p>Name of variables/ functions, i.e: add, foobar, x, y, etc</p>"},{"name":"VAR_PREFIX","value":"3","doc":"€ symbol denotes variables","summary":"<p>€ symbol denotes variables</p>"},{"name":"NUMBER","value":"4","doc":"Integers and Floats are both Number tokens but will use Int and Float internally","summary":"<p>Integers and Floats are both Number tokens but will use Int and Float internally</p>"},{"name":"ASSIGN","value":"5","doc":"= for assignment","summary":"<p>= for assignment</p>"},{"name":"ADDITION","value":"6","doc":"'plus' operator for addition","summary":"<p>'plus' operator for addition</p>"},{"name":"SUBTRACTION","value":"7","doc":"'awayFrom' operator for subtraction","summary":"<p>'awayFrom' operator for subtraction</p>"},{"name":"MULTIPLICATION","value":"8","doc":"'times' operator for multiplication","summary":"<p>'times' operator for multiplication</p>"},{"name":"DIVISION","value":"9","doc":"'into' operator for division","summary":"<p>'into' operator for division</p>"},{"name":"EQUALITY","value":"10","doc":"'is' (==)","summary":"<p>'is' (==)</p>"},{"name":"NEGATION","value":"11","doc":"'not' for negation","summary":"<p>'not' for negation</p>"},{"name":"INEQUALITY","value":"12","doc":"'isNot' (!=)","summary":"<p>'isNot' (!=)</p>"},{"name":"LT","value":"13","doc":"'isSmallerThan' (>)","summary":"<p>'isSmallerThan' (>)</p>"},{"name":"GT","value":"14","doc":"'isBiggerThan' (<)","summary":"<p>'isBiggerThan' (&lt;)</p>"},{"name":"COMMA","value":"15","doc":"','","summary":"<p>','</p>"},{"name":"LIKE","value":"16","doc":"'like', ked's version of ;","summary":"<p>'like', ked's version of ;</p>"},{"name":"LPAREN","value":"17","doc":"'('","summary":"<p>'('</p>"},{"name":"RPAREN","value":"18","doc":"')'","summary":"<p>')'</p>"},{"name":"LBRACE","value":"19","doc":"'{'","summary":"<p>'{'</p>"},{"name":"RBRACE","value":"20","doc":"'}'","summary":"<p>'}'</p>"},{"name":"FUNCTION","value":"21","doc":"'bai' for function definition","summary":"<p>'bai' for function definition</p>"},{"name":"REMEMBER","value":"22","doc":"'remember' for variable assignment","summary":"<p>'remember' for variable assignment</p>"},{"name":"RETURN","value":"23","doc":"'hereYaGoBai' for returning from a function","summary":"<p>'hereYaGoBai' for returning from a function</p>"},{"name":"TRUE","value":"24","doc":"'gospel'","summary":"<p>'gospel'</p>"},{"name":"FALSE","value":"25","doc":"'bull'","summary":"<p>'bull'</p>"},{"name":"IF","value":"26","doc":"'eh'","summary":"<p>'eh'</p>"},{"name":"ELSE","value":"27","doc":"'orEvenJust'","summary":"<p>'orEvenJust'</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crnbrdrck/ked/Ked","kind":"module","full_name":"Ked","name":"Ked"},"doc":"Enum for representing the different types of Tokens that can be generated from Ked source code.\n\nAn Enum is used so that we are able to use syntax like `TokenType::IDENT` when creating `Token` objects","summary":"<p>Enum for representing the different types of Tokens that can be generated from Ked source code.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"addition?-instance-method","html_id":"addition?-instance-method","name":"addition?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L28","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L28","def":{"name":"addition?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ADDITION"}},{"id":"assign?-instance-method","html_id":"assign?-instance-method","name":"assign?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L26","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L26","def":{"name":"assign?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ASSIGN"}},{"id":"comma?-instance-method","html_id":"comma?-instance-method","name":"comma?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L49","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L49","def":{"name":"comma?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == COMMA"}},{"id":"division?-instance-method","html_id":"division?-instance-method","name":"division?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L34","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L34","def":{"name":"division?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DIVISION"}},{"id":"else?-instance-method","html_id":"else?-instance-method","name":"else?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L76","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L76","def":{"name":"else?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ELSE"}},{"id":"eof?-instance-method","html_id":"eof?-instance-method","name":"eof?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L11","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L11","def":{"name":"eof?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == EOF"}},{"id":"equality?-instance-method","html_id":"equality?-instance-method","name":"equality?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L36","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L36","def":{"name":"equality?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == EQUALITY"}},{"id":"false?-instance-method","html_id":"false?-instance-method","name":"false?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L72","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L72","def":{"name":"false?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FALSE"}},{"id":"function?-instance-method","html_id":"function?-instance-method","name":"function?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L64","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L64","def":{"name":"function?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FUNCTION"}},{"id":"gt?-instance-method","html_id":"gt?-instance-method","name":"gt?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L44","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L44","def":{"name":"gt?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == GT"}},{"id":"ident?-instance-method","html_id":"ident?-instance-method","name":"ident?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L16","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L16","def":{"name":"ident?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == IDENT"}},{"id":"if?-instance-method","html_id":"if?-instance-method","name":"if?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L74","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L74","def":{"name":"if?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == IF"}},{"id":"illegal?-instance-method","html_id":"illegal?-instance-method","name":"illegal?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L9","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L9","def":{"name":"illegal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ILLEGAL"}},{"id":"inequality?-instance-method","html_id":"inequality?-instance-method","name":"inequality?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L40","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L40","def":{"name":"inequality?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == INEQUALITY"}},{"id":"lbrace?-instance-method","html_id":"lbrace?-instance-method","name":"lbrace?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L57","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L57","def":{"name":"lbrace?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LBRACE"}},{"id":"like?-instance-method","html_id":"like?-instance-method","name":"like?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L51","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L51","def":{"name":"like?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LIKE"}},{"id":"lparen?-instance-method","html_id":"lparen?-instance-method","name":"lparen?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L53","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L53","def":{"name":"lparen?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LPAREN"}},{"id":"lt?-instance-method","html_id":"lt?-instance-method","name":"lt?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L42","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L42","def":{"name":"lt?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LT"}},{"id":"multiplication?-instance-method","html_id":"multiplication?-instance-method","name":"multiplication?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L32","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L32","def":{"name":"multiplication?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MULTIPLICATION"}},{"id":"negation?-instance-method","html_id":"negation?-instance-method","name":"negation?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L38","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L38","def":{"name":"negation?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NEGATION"}},{"id":"number?-instance-method","html_id":"number?-instance-method","name":"number?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L20","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L20","def":{"name":"number?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NUMBER"}},{"id":"rbrace?-instance-method","html_id":"rbrace?-instance-method","name":"rbrace?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L59","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L59","def":{"name":"rbrace?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RBRACE"}},{"id":"remember?-instance-method","html_id":"remember?-instance-method","name":"remember?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L66","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L66","def":{"name":"remember?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == REMEMBER"}},{"id":"return?-instance-method","html_id":"return?-instance-method","name":"return?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L68","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L68","def":{"name":"return?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RETURN"}},{"id":"rparen?-instance-method","html_id":"rparen?-instance-method","name":"rparen?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L55","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L55","def":{"name":"rparen?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RPAREN"}},{"id":"subtraction?-instance-method","html_id":"subtraction?-instance-method","name":"subtraction?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L30","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L30","def":{"name":"subtraction?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SUBTRACTION"}},{"id":"true?-instance-method","html_id":"true?-instance-method","name":"true?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L70","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L70","def":{"name":"true?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == TRUE"}},{"id":"var_prefix?-instance-method","html_id":"var_prefix?-instance-method","name":"var_prefix?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L18","source_link":"https://github.com/crnbrdrck/ked/blob/dbf5c3fc0bd1c8152b5745dcda1bd0575dd75bd4/src/ked/token.cr#L18","def":{"name":"var_prefix?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == VAR_PREFIX"}}],"macros":[],"types":[]}]}]}})